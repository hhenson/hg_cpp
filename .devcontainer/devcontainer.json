// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/cpp
{
	"name": "C++",
	"build": {
		"dockerfile": "Dockerfile"
	},
	"features": {
		"ghcr.io/devcontainers/features/python:1": {
			"installTools": true,
			"optimize": true,
			"enableShared": true,
			"version": "3.12"
		},
		"ghcr.io/jsburckhardt/devcontainer-features/uv:1": {},
		// Add Conan (C/C++ package manager) to the devcontainer so native builds
		// and `conan install` work out of the box. The project's lockfile shows
		// Conan ~2.21.0; feature will install a recent Conan 2 release.
		"ghcr.io/devcontainers/features/conan:1": {}
	}
	,
	// Install a newer GCC/G++ on container creation so Codespaces use g++-13 by default.
	// This runs after the container is created. It uses sudo so it works when the
	// container user is non-root. Rebuild the container to apply changes.
	"postCreateCommand": "set -euo pipefail && sudo apt-get update && sudo apt-get install -y software-properties-common ca-certificates && sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test || true && sudo apt-get update && sudo apt-get install -y gcc-13 g++-13 && sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 60 --slave /usr/bin/g++ g++ /usr/bin/g++-13 && sudo update-alternatives --set gcc /usr/bin/gcc-13 || true && gcc --version && g++ --version"

	// Features to add to the dev container. More info: https://containers.dev/features.
	// "features": {},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "gcc -v",

	// Configure tool-specific properties.
	// "customizations": {},

	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	// "remoteUser": "root"
}
