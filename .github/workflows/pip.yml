name: Pip

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    name: Build with Pip
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        compilers: [gcc, clang, msvc]
        python-version: ["3.12"]
        exclude:
          - os: windows-latest
            compilers: [gcc, clang]
          - os: macos-latest
            compilers: [msvc, gcc]
          - os: ubuntu-latest
            compilers: [clang, msvc]

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-suffix: "optional-suffix"
          python-version: ${{ matrix.python-version }}

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: ${{ matrix.compiler }}
          vcvarsall: ${{ contains(matrix.os, 'windows-latest') }}
          cmake: true
          ninja: true
          conan: true
          cppcheck: true
          clang-tidy: true

      - name: Set min macOS version
        if: runner.os == 'macOS'
        run: |
          echo "MACOSX_DEPLOYMENT_TARGET=10.14" >> $GITHUB_ENV

      - name: Build and install
        run: |
          uv tool install conan
          uv tool run conan profile detect --force
          uv tool run conan install .
          uv sync
          uv build --wheel

      - name: Test
        run: |
          uv tool install pytest
          uv tool run pytest